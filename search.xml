<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>/2019/05/29/%E5%A5%BD%E4%B9%85%E6%B2%A1%E5%86%99%E5%8D%9A%E5%AE%A2%E4%BA%86%E2%80%A6%E2%80%A6/</url>
    <content><![CDATA[<hr>
<p>title: 好久没写博客了……<br>date: 2019-05-29 20:35:57</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><h3 id="最近跟网课干上了……"><a href="#最近跟网课干上了……" class="headerlink" title="最近跟网课干上了……"></a>最近跟网课干上了……</h3><p>首先是发现了刷网课的油猴脚本（可以去Greasy Fork自行下载），然后打算靠这个赚点钱（替别人刷网课），给同学、师哥师姐、室友免费刷了不少，没赚到几块钱，而且太麻烦太麻烦。（智慧树需要刷见面课，完成作业，章检测，考试等等，而且宿舍网很不稳定）<br>之后弃坑了……<br>然后跟小伙伴自己用现成的源码搭建了一个看会员电影的app，其实这东西就是靠一个解析接口，没宣传出去，打算自己用吧，毕竟在法律的边缘游走。<br>之后在吾爱破解上偶尔看到一个关于搭建搜网课答案公众号的帖子，然后跟着浮梦大佬的教程做了一遍，效果不错，之后开始考虑做公众号了，就靠这个搜网课答案的方法引流，然后自己在网络上宣传。最近公众号一直日增1k+，效果还是不错的<br><a href="https://i.loli.net/2019/05/29/5cee74d43adf215257.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/05/29/5cee74d43adf215257.png" alt="" title=""></a><br>但是阅读量很少，本来以为能靠开通流量主赚点钱，但是至今才赚了100的广告费，但是在如今的时代，人头就是人民币，有很多变现的方式。<br>因为这个公众号这个功能主要是靠一个题库api接口，但是教程提供那个很不稳定，一会放广告，一会限制次数，到现在改成付费的了，所以被逼的学做题库api接口<br>经过不懈的努力，我终于做成了api题库接口，里面用了许多套路，哈哈哈<br>具体技术操作真的懒得写了<br>最近这段时间真的认识了许多许多大佬，虽然没有赚到多少钱，但是确实有所收获。</p>
<p>最近立一个flag吧，首先练体能，练障碍，真的不想再挂科了！！！<br>虽然因为安保不能参见九月份的python二级考试，但是还要继续认真学习python，另外继续学习php（感觉在与网路安全背道而驰哈哈哈）<br>另外准备考试，孝敬父母，准备生活！！！</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/03/28/python3-request%E5%BA%93/</url>
    <content><![CDATA[<hr>
<p>layout: ‘n’<br>title: python3 request库<br>date: 2019-03-28 18:52:34</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>建立一个会话</p>
<pre><code>s = requsets.Session()
</code></pre><p>发送请求</p>
<pre><code>r = s.get(&apos;heep://www.gzyu.club&apos;)


r = requests.post(&apos;http://httpbin.org/post&apos;, data = {&apos;key&apos;:&apos;value&apos;})
</code></pre><p>打印源码</p>
<pre><code>print(r.content.decode(&apos;utf-8&apos;))
</code></pre>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/03/23/DOS%E6%94%BB%E5%87%BB/</url>
    <content><![CDATA[<hr>
<p>title: DOS攻击<br>date: 2019-03-23 10:55:43</p>
<h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><p>拒绝服务攻击（英语：denial-of-service attack，缩写：DoS attack、DoS）亦称洪水攻击，是一种网络攻击手法，其目的在于使目标计算机的网络或系统资源耗尽，使服务暂时中断或停止，导致其正常用户无法访问。（维基百科）</p>
<p>dos攻击的方法很多，大体分为五大类：</p>
<ul>
<li>耗尽计算机资源，如带宽、内存、磁盘空间、处理器时间。</li>
<li>破坏配置信息，如路由信息。</li>
<li>破环状态信息，如TCP链接中断。</li>
<li>破坏网络硬件。</li>
<li>破坏通信介质，阻挡正常通信。</li>
</ul>
<p>具体的攻击方法有很多，例如死亡之ping，SYN，ACK等是用自己的流量对等消耗服务器的流量，还有一种是泪滴攻击分片攻击，发送很小的数据包，服务器在接受这些数据包在内部会产生错误，这样服务器会消耗更多的流量百度百科有具体介绍<br><a href="https://i.loli.net/2019/03/23/5c9592ab7af4f.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/23/5c9592ab7af4f.png" alt="" title=""></a></p>
<p>下面演示用一个工具进行简单的dos攻击<br>一个dos攻击的简单工具：<a href="https://github.com/GinjaChris/pentmenu" target="_blank" rel="noopener">pentmenu</a><br>首先nslookup解析获得网站的IP地址<br><a href="https://i.loli.net/2019/03/23/5c959fb5ca167.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/23/5c959fb5ca167.png" alt="" title=""></a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/03/22/md5%E7%BB%95%E8%BF%87/</url>
    <content><![CDATA[<hr>
<p>title: md5绕过<br>date: 2019-03-22 16:22:32</p>
<h2 id="tags-md5绕过"><a href="#tags-md5绕过" class="headerlink" title="tags:md5绕过"></a>tags:md5绕过</h2><p>#php处理0e开头md5哈希字符串 /bug<br>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p>
<p>关于PHP hash比较缺陷详细介绍：<a href="http://www.freebuf.com/news/67007.html" target="_blank" rel="noopener">http://www.freebuf.com/news/67007.html</a></p>
<pre><code>0x01 md5(str)

QNKCDZO

0e830400451993494058024219903391

s878926199a

0e545993274517709034328855841020

s155964671a

0e342768416822451524974117254469

s214587387a

0e848240448830537924465865611904

s214587387a

0e848240448830537924465865611904

s878926199a

0e545993274517709034328855841020

s1091221200a

0e940624217856561557816327384675

s1885207154a

0e509367213418206700842008763514

s1502113478a

0e861580163291561247404381396064

s1885207154a

0e509367213418206700842008763514

s1836677006a

0e481036490867661113260034900752

s155964671a

0e342768416822451524974117254469

s1184209335a

0e072485820392773389523109082030

s1665632922a

0e731198061491163073197128363787

s1502113478a

0e861580163291561247404381396064

s1836677006a

0e481036490867661113260034900752

s1091221200a

0e940624217856561557816327384675

s155964671a

0e342768416822451524974117254469

s1502113478a

0e861580163291561247404381396064

s155964671a

0e342768416822451524974117254469

s1665632922a

0e731198061491163073197128363787

s155964671a

0e342768416822451524974117254469

s1091221200a

0e940624217856561557816327384675

s1836677006a

0e481036490867661113260034900752

s1885207154a

0e509367213418206700842008763514

s532378020a

0e220463095855511507588041205815

s878926199a

0e545993274517709034328855841020

s1091221200a

0e940624217856561557816327384675

s214587387a

0e848240448830537924465865611904

s1502113478a

0e861580163291561247404381396064

s1091221200a

0e940624217856561557816327384675

s1665632922a

0e731198061491163073197128363787

s1885207154a

0e509367213418206700842008763514

s1836677006a

0e481036490867661113260034900752

s1665632922a

0e731198061491163073197128363787

s878926199a

0e545993274517709034328855841020


0x02 md5(md5())

0x03 md5(md5(str).&quot;SALT&quot;)
2
0e774261293712168181959463563504
</code></pre><p> 转载自：<a href="http://www.cnblogs.com/Primzahl/p/6018158.html" target="_blank" rel="noopener">http://www.cnblogs.com/Primzahl/p/6018158.html</a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/03/11/sql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<hr>
<p>title: sql注入<br>date: 2019-03-11 16:56:03</p>
<h2 id="tags-sql注入"><a href="#tags-sql注入" class="headerlink" title="tags:sql注入"></a>tags:sql注入</h2><h2 id="sql注入基本步骤"><a href="#sql注入基本步骤" class="headerlink" title="sql注入基本步骤"></a>sql注入基本步骤</h2><h3 id="找注入点且得到闭合字符"><a href="#找注入点且得到闭合字符" class="headerlink" title="找注入点且得到闭合字符"></a>找注入点且得到闭合字符</h3><h3 id="判断数据库类型"><a href="#判断数据库类型" class="headerlink" title="判断数据库类型"></a>判断数据库类型</h3><h3 id="猜解列数，得到显示位"><a href="#猜解列数，得到显示位" class="headerlink" title="猜解列数，得到显示位"></a>猜解列数，得到显示位</h3><h3 id="得到基本信息-如：数据库名、数据库版本、当前数据库名等"><a href="#得到基本信息-如：数据库名、数据库版本、当前数据库名等" class="headerlink" title="得到基本信息(如：数据库名、数据库版本、当前数据库名等)"></a>得到基本信息(如：数据库名、数据库版本、当前数据库名等)</h3><h3 id="得到数据库名"><a href="#得到数据库名" class="headerlink" title="得到数据库名"></a>得到数据库名</h3><h3 id="得到表名"><a href="#得到表名" class="headerlink" title="得到表名"></a>得到表名</h3><h3 id="得到列名"><a href="#得到列名" class="headerlink" title="得到列名"></a>得到列名</h3><h3 id="得到列值"><a href="#得到列值" class="headerlink" title="得到列值"></a>得到列值</h3><ul>
<li>找到注入点且得到闭合符号<br><a href="https://i.loli.net/2019/03/11/5c8614c113783.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/11/5c8614c113783.png" alt="" title=""></a><br>sql语句中 –空格 是注释的意思，在url中+号编码为空格<br>即   ‘id=1’– ‘   正常回显，–空格将最后的单引号注释掉了</li>
</ul>
<p>以下内容为部分程序代码:<br>$id=$GET[‘id’]; //接受get传递的参数名为id的值并赋值给变量id<br>$sql=”SELECT * FROM users WHERE id=’$id’ LIMIT 0,1”; // 把查询到的结果赋值给变量名sql<br>一对单引号为闭合字符</p>
<hr>
<ul>
<li>判断数据库类型<br>通过不同数据库不同的语法判断</li>
</ul>
<hr>
<ul>
<li>猜解列数，得显示位<br><a href="https://i.loli.net/2019/03/11/5c86192be1d58.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/11/5c86192be1d58.png" alt="" title=""></a><br>order by 4 错<br><a href="https://i.loli.net/2019/03/11/5c86196525a7a.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/11/5c86196525a7a.png" alt="" title=""></a><br>order by 3 对<br>得一共3列<br><a href="https://i.loli.net/2019/03/11/5c861a63f33a7.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/11/5c861a63f33a7.png" alt="" title=""></a><br>爆出显示位为后两位，可以在2，3的位置做手脚</li>
</ul>
<hr>
<ul>
<li>得到基本信息<br>注：Mysql的CONCAT_WS函数，有分割符的字符串连接<br><a href="https://i.loli.net/2019/03/11/5c862191ddb99.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/11/5c862191ddb99.png" alt="" title=""></a></li>
</ul>
<hr>
<ul>
<li>得到数据库<br><a href="https://i.loli.net/2019/03/12/5c87631d7ba02.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/12/5c87631d7ba02.png" alt="" title=""></a><br><a href="https://i.loli.net/2019/03/12/5c8766073ae20.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/12/5c8766073ae20.png" alt="" title=""></a></li>
</ul>
<hr>
<ul>
<li>得到security数据库的表名<br><a href="https://i.loli.net/2019/03/12/5c876c351df96.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/12/5c876c351df96.png" alt="" title=""></a></li>
</ul>
<hr>
<ul>
<li>猜解列名<br><a href="https://i.loli.net/2019/03/12/5c876f891817e.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/12/5c876f891817e.png" alt="" title=""></a></li>
</ul>
<hr>
<ul>
<li>猜解数据<br><a href="https://i.loli.net/2019/03/12/5c877132df21a.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/12/5c877132df21a.png" alt="" title=""></a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/03/09/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E8%AF%95/</url>
    <content><![CDATA[<hr>
<p>title: 正则表达式<br>date: 2019-03-09 11:42:09</p>
<h2 id="tags-正则表达式"><a href="#tags-正则表达式" class="headerlink" title="tags:正则表达式"></a>tags:正则表达式</h2><p>正则表达式</p>
<p><a href="https://app.yinxiang.com/shard/s32/nl/22857748/95c7bf07-8007-4685-bbdc-8c2ff000ee71" target="_blank" rel="noopener">印象笔记正则表达式常用符号链接</a></p>
<p><a href="https://app.yinxiang.com/shard/s32/nl/22857748/e6d2f3f9-b173-43e4-8d93-9c936847bb6d" target="_blank" rel="noopener">印象笔记正则表达式POSIX字符集连接</a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/03/09/%E5%88%B7%E7%BD%91%E8%AF%BE%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<hr>
<p>title: 刷网课教程<br>date: 2019-03-09 09:10:20</p>
<h2 id="tags-刷网课教程"><a href="#tags-刷网课教程" class="headerlink" title="tags:刷网课教程"></a>tags:刷网课教程</h2><p><strong><em>刷网课</em></strong><br>看很多人问我怎么刷网课，统一回复不凡方便，于是总结该博客<br>准备工具有：谷歌浏览器最新版,Tampermonkey(谷歌插件，俗称油猴)，刷网课脚本（目前只有超星学习通的和知到智慧树的，且学习通的脚本可以自动完成章节测，智慧树不行。）</p>
<p><a href="https://dl.pconline.com.cn/download/51614.html" target="_blank" rel="noopener">谷歌浏览器下载地址</a><br><a href="http://chromecj.com/web-development/2018-07/1468/download.html" target="_blank" rel="noopener">油猴插件下载地址</a><br><a href="https://pan.baidu.com/s/182MuJ4uhUa63e_z4kXl8tg" target="_blank" rel="noopener">网课脚本下载地址,提取码：07od</a></p>
<p>打开谷歌浏览器右上角的三个点，更多工具，拓展程序<br><a href="https://i.loli.net/2019/03/09/5c830e230f627.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/09/5c830e230f627.png" alt="" title=""></a><br>打开右上角的开发者模式<br>将下载的油猴crx文件直接拖进去安装即可<br><a href="https://i.loli.net/2019/03/09/5c830f285ca65.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/09/5c830f285ca65.png" alt="" title=""></a><br>右键油猴点添加新脚本，将自带的内容全部删除，然后将网课脚本全部粘贴上，然后文件保存即可<br>直接打开学习通的课程，脚本即可自动运行，打开智慧树的课程需要点击红色按钮即可运行<br><a href="https://i.loli.net/2019/03/09/5c83109713493.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/09/5c83109713493.png" alt="" title=""></a></p>
<p>注：该方法不适合大量操作，只能一个一个挂机，不可登入两个账号同时刷，多开同时刷的方法如果需要可以私聊我。该方法比普遍的软件刷理论更可靠，不易有不良记录，但万一有不良记录，风险请自行承担！</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/03/08/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%8B%AC%E7%AB%8B%E5%86%99%E8%84%9A%E6%9C%AC%E5%81%9A%E9%A2%98/</url>
    <content><![CDATA[<hr>
<p>title: 第一次独立写脚本做题<br>date: 2019-03-08 12:17:35</p>
<h2 id="tags-python3"><a href="#tags-python3" class="headerlink" title="tags:python3"></a>tags:python3</h2><p>第一次写脚本完成题目<br>bugkuctf的密码题的进制转化<br><a href="https://i.loli.net/2019/03/08/5c81eb725577d.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/08/5c81eb725577d.png" alt="" title=""></a><br><a href="https://i.loli.net/2019/03/08/5c81eba6ec19b.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/08/5c81eba6ec19b.png" alt="" title=""></a><br><a href="https://i.loli.net/2019/03/08/5c81e9e2ea921.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/08/5c81e9e2ea921.png" alt="" title=""></a><br><a href="https://i.loli.net/2019/03/08/5c81ebf9c3bee.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/03/08/5c81ebf9c3bee.png" alt="" title=""></a><br>很不足的是结果很不美观，不是在一行直接复制粘贴，本人水平太菜没改了ozr</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/03/05/while%E5%BE%AA%E7%8E%AF%E6%94%B9%E6%88%90for%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<hr>
<p>layout: ‘n’<br>title: while循环改成for循环<br>date: 2019-03-05 15:13:05</p>
<h2 id="tags-python3"><a href="#tags-python3" class="headerlink" title="tags:python3"></a>tags:python3</h2><p>笨办法学python3习题40</p>
<pre><code>ten_things = &quot;Apples Oranges Crows Telephone Light 
            Sugar&quot;

print(&quot;Wait there are not 10 things in that in that 
    list. Let&apos;s fix that.&quot;)

stuff = ten_things.split(&apos; &apos;)
more_stuff = [&quot;Day&quot;, &quot;Night&quot;, &quot;Song&quot;, &quot;Frisbee&quot;, &quot;Corn&quot;,
     &quot;Banana&quot;, &quot;Girl&quot;, &quot;Boy&quot;]


for i in more_stuff:
    if len(stuff) != 10:
        print(&quot;Adding: &quot;, i)
        stuff.append(i)
        print(f&quot;There are {len(stuff)} items now.&quot;)
    else:
        break

print(&quot;There we go: &quot;, stuff)

print(&quot;Let&apos;s do some things with stuff.&quot;)

print(stuff[1])
print(stuff[-1])
print(stuff.pop())
print(&apos; &apos;.join(stuff))
print(&apos;#&apos;.join(stuff[3:5]))
</code></pre>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/02/17/MP3%E9%9A%90%E5%86%99/</url>
    <content><![CDATA[<hr>
<p>title: MP3隐写<br>date: 2019-02-17 12:11:51</p>
<h2 id="tags-ctf"><a href="#tags-ctf" class="headerlink" title="tags:ctf"></a>tags:ctf</h2><p>做了两个MP3隐写的题<br>往常的是音频隐写工具audactiy打开后要么是摩斯电码，要么是波长写01，但这两道题给了一段流行音乐，并且已知一段密钥<br>需要MP3Stego这个工具<br>cmd命令为：.\Decode.exe -X -P 密钥 文件名.mp3<br><a href="https://i.loli.net/2019/02/17/5c68dec0ce404.png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://i.loli.net/2019/02/17/5c68dec0ce404.png" alt="" title=""></a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/02/13/if-elif-%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<hr>
<p>title: if / elif 的区别<br>date: 2019-02-13 04:37:39</p>
<h2 id="tags-python3"><a href="#tags-python3" class="headerlink" title="tags:python3"></a>tags:python3</h2><pre><code>a=88
if a&gt;= 90:
   print u&quot;优秀&quot;
if a == 88:
    print u&quot;正好88&quot;
if  a &gt;= 80:
   print u&quot;良好&quot;
else:
   print u&quot;都不合格&quot;

print &quot;* * &quot;*10

if a&gt;= 90:
    print u&quot;优秀&quot;
elif a == 88:
    print u&quot;正好88&quot;
elif  a &gt;= 80:
   print u&quot;良好&quot;
else:
   print u&quot;都不合格&quot;
</code></pre><p>如果是用 if 的话，他会一直遍历完所有的if，不管你想判断的条件有没有遍历到，他都会继续执行完所有的if；而 elif 呢，则会比较快捷，主要还是看你的用处，如果你是想遍历到你的判断条件就不再执行其他判断条件分支语句，那么就用elif；elif 就是当走到符合查询条件的语句后，后面所有的elif和else就不会再被执行。<br>elif就是如果以上不符合走我这一步，依次累积。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/02/13/%E5%8F%91%E7%8E%B0%E7%AC%A8%E5%8A%9E%E6%B3%95%E5%AD%A6python3%E7%9A%84%E4%B8%A4%E5%A4%84%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<hr>
<p>layout: ‘n’<br>title: 发现笨办法学python3的两处错误<br>date: 2019-02-13 04:08:15</p>
<h2 id="tags-python3"><a href="#tags-python3" class="headerlink" title="tags:python3"></a>tags:python3</h2><p>在习题28(布尔表达式练习）<br>第11个和第12个都漏了前引号，报错了，当时看起来别扭。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/02/10/pop/</url>
    <content><![CDATA[<hr>
<p>title: pop<br>date: 2019-02-10 21:04:30</p>
<h2 id="tags-python3"><a href="#tags-python3" class="headerlink" title="tags:python3"></a>tags:python3</h2><ul>
<li>Python3 List pop()方法：</li>
</ul>
<p>pop() 函数用于移除列表中的一个元素（默认最后一个元素），并且返回该元素的值。<br>pop()方法语法：</p>
<pre><code>list.pop([index=-1])
</code></pre><p>参数：index – 可选参数，要移除列表元素的索引值，不能超过列表总长度，默认为 index=-1，删除最后一个列表值。</p>
<p>返回值：从列表中移除的元素对象。</p>
<pre><code>list1 = [&apos;Google&apos;, &apos;Runoob&apos;, &apos;Taobao&apos;]
list1.pop()
print (&quot;列表现在为 : &quot;, list1)
list1.pop(1)
print (&quot;列表现在为 : &quot;, list1)



列表现在为 :  [&apos;Google&apos;, &apos;Runoob&apos;]
列表现在为 :  [&apos;Google&apos;]
</code></pre><p>可以通过下面这种方法打印 pop() 函数来显示返回值:</p>
<pre><code>list1 = [&apos;Google&apos;, &apos;Runoob&apos;, &apos;Taobao&apos;]
list_pop=list1.pop(1)
print (&quot;删除的项为 :&quot;, list_pop)
print (&quot;列表现在为 : &quot;, list1)




删除的元素为 : Runoob
列表现在为 :  [&apos;Google&apos;, &apos;Taobao&apos;]
</code></pre><p><strong><em>返回值很重要</em></strong></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/02/06/%E7%AC%A8%E5%8A%9E%E6%B3%95%E5%AD%A6Python3/</url>
    <content><![CDATA[<hr>
<p>title: 笨办法学Python3（ex22）<br>date: 2019-02-06 20:55:44</p>
<h2 id="tags-Python"><a href="#tags-Python" class="headerlink" title="tags:Python"></a>tags:Python</h2><p>应《笨办法学python3》要求，列表整理之前学的知识。</p>
<ul>
<li><strong>等于号</strong>：=的作用是将右边的值赋给左边的变量名。==的作用是检查左右两边的值是否相等。</li>
<li><p><strong>.format()</strong>：格式化函数。格式化具体是什么意思至今还有点模糊，现在觉得格式化就是变成符合某种格式。将字符串里嵌入变量，需要用{}，把变量放在里面，字符串还必须以f开头，f是“格式化”（format）的意思。</p>
<pre><code>I = &apos;gzy&apos;
print(f&quot;{I} is handsome&quot;)
&apos;gzy is handsome&apos;
</code></pre></li>
</ul>
<pre><code>&quot;{1} {0} {1}&quot;.format(&quot;hello&quot;, &quot;world&quot;) # 设置指定位置
 &apos;world hello world&apos; 

print(&quot;网站名：{name}, 地址 {url}&quot;.format(name=&quot;菜鸟教程&quot;, 
    url=&quot;www.runoob.com&quot;))#也可以设置参数
</code></pre><p>还可以设置参数,还可以向其传输对象，还有数字格式化啥的……</p>
<ul>
<li><strong>转义</strong>：注意是反斜杠\</li>
<li><p><strong>input</strong>：<br>Python3.x 中 input() 函数接受一个标准输入数据，返回为 string 类型</p>
<pre><code>a = input(&quot;输入：&quot;)
input : 123
</code></pre></li>
<li><p><strong>print</strong>：在print后面加，end=‘ ’，告诉print不要用换行符结束这一行跑到下一行去。无返回值。<br>objects – 复数，表示可以一次输出多个对象。输出多个对象时，需要用 , 分隔。sep – 用来间隔多个对象，默认值是一个空格。end – 用来设定以什么结尾。默认值是换行符 \n，我们可以换成其他字符串。file – 要写入的文件对象。</p>
</li>
<li><strong>argv模块</strong>：sys.argv 是一个包含命令行参数的列表。</li>
<li><p><strong>读取文件</strong>：open:常用形式是接收两个参数：文件名(file)和模式(mode),mode的参数又有很多。read：返回值为从字符串中读取的字节。</p>
<pre><code>fo = open(&quot;runoob.txt&quot;, &quot;rw+&quot;)
print  (&quot;文件名为: &quot;, fo.name)   #打开文件
</code></pre></li>
</ul>
<pre><code>line = fo.read(10)
print &quot;读取的字符串: %s&quot; % (line)


fo.close() #关闭文件
</code></pre><ul>
<li><p><strong>读写文件</strong>：close：关闭文件，相当于“保存”。read：读取文件的内容，可以把结果赋给一个变量。readline：只读取文本文件中的一行。truncate：清空文件。write（‘stuff’）：将“stuff”写入文件。seek（0）：将读写位置移动到文件开头。</p>
</li>
<li><p><strong>exists模块</strong>：判断指定文件名是否存在。python还有很多方式判断文件/目录是否存在。</p>
</li>
<li><p><strong>更帅的文件操作</strong>：用echo创建文件：  echo “This is a test file.”  &gt;  test.txt<br>用cat命令显示文件内容：  cat test.txt     </p>
</li>
<li><p><strong>函数</strong>：函数可以干的三件事：1.它们给代码段命名。2.它们可以接收参数。3.利用上面的1和2，它们可以让你创建”迷你脚本”或者“小命令”。</p>
</li>
<li><p><strong>def</strong>：一般格式：</p>
<pre><code>def 函数名（参数列表）：
     函数体
</code></pre></li>
</ul>
<p>定义函数的简单规则：<br>函数代码块以 def 关键词开头，后接函数标识符名称和圆括号 ()。<br>任何传入参数和自变量必须放在圆括号中间，圆括号之间可以用于定义参数。<br>函数的第一行语句可以选择性地使用文档字符串—用于存放函数说明。<br>函数内容以冒号起始，并且缩进。<br>return [表达式] 结束函数，选择性地返回一个值给调用方。不带表达式的return相当于返回 None。</p>
<p>函数调用：<br>定义一个函数：给了函数一个名称，指定了函数里包含的参数，和代码块结构。这个函数的基本结构完成以后，你可以通过另一个函数调用执行，也可以直接从 Python 命令提示符执行。</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/02/05/hexo%E4%B8%A2%E4%BA%86%E5%90%93%E5%8A%B3%E8%B5%84%E4%B8%80%E8%B7%B3/</url>
    <content><![CDATA[<hr>
<p>title: hexo丢了吓劳资一跳<br>date: 2019-02-05 18:22:11</p>
<h2 id="tags-糟心"><a href="#tags-糟心" class="headerlink" title="tags:糟心"></a>tags:糟心</h2><p>今天想改一下博客的网站图标，hexo g出现bash:hexo:command not found<br>我以为坑爹爹的win10给我把hexo自动删除了，然后问度娘才得知是我前几天配置java环境的时候把hexo的环境变量搞坏了。。。改回来就好了，还好数据没丢失。<br><a href="https://i.loli.net/2019/02/05/5c59742e15500.png" data-fancybox="group" data-caption="path配置" class="fancybox"><img src="https://i.loli.net/2019/02/05/5c59742e15500.png" alt="path配置" title="path配置"></a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/02/02/%E5%AF%92%E5%81%87%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<hr>
<p>title: 寒假学习计划<br>date: 2019-02-02 22:13:21</p>
<h2 id="tags-计划"><a href="#tags-计划" class="headerlink" title="tags:计划"></a>tags:计划</h2><p>学习方向因为弃坑逆向。。。转向web，渗透（这方面尤其渗透才是自己比较感兴趣的）。没招了，寒假恶补web基础，首先学习php，sql，py，学好语言基础，kali渗透实战尝试。<br><a href="https://i.loli.net/2019/02/02/5c55a6fb28880.png" data-fancybox="group" data-caption="还有寒假作业累" class="fancybox"><img src="https://i.loli.net/2019/02/02/5c55a6fb28880.png" alt="还有寒假作业累" title="还有寒假作业累"></a></p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2019/02/02/%E8%AE%B0%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%90%AD%E5%BB%BA%E5%A5%BD%E7%8B%97%E7%AA%9D/</url>
    <content><![CDATA[<hr>
<p>title: 记第一次搭建好狗窝<br>date: 2019-02-02 15:27:36</p>
<h2 id="tags-杂"><a href="#tags-杂" class="headerlink" title="tags:杂"></a>tags:杂</h2><p>emmmmmmmmmmmm也不知道说啥<br>见习结束啦！哈哈哈哈！感觉最近都没学习。<br>下一步要好好学习了嘿嘿<br><a href="https://i.loli.net/2019/02/02/5c554cf7312c7.jpg" data-fancybox="group" data-caption="见习结束了" class="fancybox"><img src="https://i.loli.net/2019/02/02/5c554cf7312c7.jpg" alt="见习结束了" title="见习结束了"></a></p>
]]></content>
  </entry>
</search>
